// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/course/add": {
            "put": {
                "description": "Создает новый курс с параметрами, описанными в json'е",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Курсы"
                ],
                "summary": "Добавляет новый курс в БД",
                "parameters": [
                    {
                        "description": "Характеристики нового курса",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.Course"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Курс успешно добавлен",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/course/delete/{course_title}": {
            "put": {
                "description": "Находит курс по его названию и изменяет его статус на \"Недоступен\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Курсы"
                ],
                "summary": "Удалить курс",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название курса",
                        "name": "course_title",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/course/delete_restore/{course_title}": {
            "get": {
                "description": "Изменяет статус курса с \"Действует\" на \"Недоступен\" и обратно",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Курсы"
                ],
                "summary": "Удалить или восстановить курс",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название курса",
                        "name": "course_title",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/course/edit": {
            "put": {
                "description": "Находит курс по имени и обновляет перечисленные поля",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Курсы"
                ],
                "summary": "Редактировать курс",
                "parameters": [
                    {
                        "description": "Данные редактируемого курса (должны содержать имя курса или его id)",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.Course"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/course/{course}": {
            "get": {
                "description": "Возвращает данные курса с переданным названием",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Курсы"
                ],
                "summary": "Получить курс",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/courses": {
            "get": {
                "description": "Возвращает все существующие курсы",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Курсы"
                ],
                "summary": "Получить все существующие курсы",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Паттерн названия курса",
                        "name": "name_pattern",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Локация",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Статус курса (Действует/Недействителен)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/enroll": {
            "put": {
                "description": "Создаёт новую заявку и связывает её с курсом",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Запись"
                ],
                "summary": "Записать на курс",
                "parameters": [
                    {
                        "description": "Параметры записи",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.EnrollCourseRequestBody"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/enrollment": {
            "get": {
                "description": "Возвращает запись с переданными параметрами",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Записи"
                ],
                "summary": "Получить запись",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Статус записи",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/enrollment/delete/{enrollment_id}": {
            "put": {
                "description": "Изменяет статус записи на \"Удалён\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Записи"
                ],
                "summary": "Удалить запись",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id записи",
                        "name": "enrollment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/enrollment/edit": {
            "put": {
                "description": "Находит запись и редактирует её поля",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Записи"
                ],
                "summary": "Редактировать запись",
                "parameters": [
                    {
                        "description": "Запись",
                        "name": "enrollment",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ds.Enrollment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/enrollment/status_change": {
            "put": {
                "description": "Получает id заявки и новый статус и производит необходимые обновления",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Запись"
                ],
                "summary": "Редактировать статус записи",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.ChangeEnrollmentStatusRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/enrollment_to_course/delete": {
            "put": {
                "description": "Удаляет запись в таблице enrollment_to_course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Удаляет связь курса с записью",
                "parameters": [
                    {
                        "description": "Параметры запроса",
                        "name": "request_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.DeleteEnrollmentToCourseRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/enrollments": {
            "get": {
                "description": "Возвращает список всех доступных записей",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Записи"
                ],
                "summary": "Получить записи",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Статус записи",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Проверяет данные для входа и в случае успеха возвращает токен для входа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Вход в систему",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "request_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.loginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.loginResp"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Выйти из системы",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Добавляет в БД нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Зарегистрировать нового пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "request_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.registerReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.registerResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.loginReq": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "app.loginResp": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "app.registerReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                }
            }
        },
        "app.registerResp": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "ds.ChangeEnrollmentStatusRequestBody": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ds.Course": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "coachEmail": {
                    "type": "string"
                },
                "coachName": {
                    "type": "string"
                },
                "coachPhone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enrolled": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ds.DeleteEnrollmentToCourseRequestBody": {
            "type": "object",
            "properties": {
                "courseID": {
                    "type": "integer"
                },
                "enrollmentID": {
                    "type": "integer"
                }
            }
        },
        "ds.EnrollCourseRequestBody": {
            "type": "object",
            "properties": {
                "courseName": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "ds.Enrollment": {
            "type": "object",
            "properties": {
                "dateCreated": {
                    "type": "string"
                },
                "dateFinished": {
                    "type": "string"
                },
                "dateProcessed": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "moderator": {
                    "$ref": "#/definitions/ds.User"
                },
                "moderatorRefer": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/ds.User"
                },
                "userRefer": {
                    "type": "string"
                }
            }
        },
        "ds.User": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/role.Role"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "role.Role": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "Undefined",
                "User",
                "Moderator",
                "Admin"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0-0",
	Host:             "127.0.0.1:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Запись на спортивные курсы МГТУ им. Н. Э. Баумана",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
